@model CardCatalog.Models.Card

@{
    ViewBag.Title = string.Join(" / ", Model.NormalizedFaces.Select(f => f.Name));
    var ownerships = ViewBag.Ownerships as List<CardCatalog.Models.Ownership>;
    var cardId = Model.NormalizedFaces[0].Id;
}

<style>
    .card-info dt, .card-info dd { display: inline; }
    .card-info dd { margin: 0 20px 0 0; }
    .card-face { display: table; float: left; border: none; }
    .card-face-image { display: table-cell; padding-right: 22px; }
    .card-face-image img { vertical-align: top; }
    .card-face-properties { display: table-cell; width: 315px; }
    dl p { margin: 0; line-height: normal; }
    dd { margin-bottom: 10px; }
    dt { font-weight: bold; }
    .card-face-text { margin: 0 0 5px 0; }
    .card-ownership { clear: both; }
</style>

<h2>@ViewBag.Title</h2>

<dl class="card-info">
    <dt>Expansion:</dt>
    <dd>@Model.Expansion</dd>

    <dt>Rarity:</dt>
    <dd>@Model.Rarity</dd>

    @{
        var cardNumbers =
            Model.NormalizedFaces
            .Where(f => f != null)
            .Select(f => f.CardNumber)
            .Where(n => n != null)
            .ToList();
    }
    @if (cardNumbers.Count > 0)
    {
        <dt>Card Number@(cardNumbers.Count > 1 ? "s" : ""):</dt>
        <dd>@string.Join(", ", cardNumbers)</dd>
    }
</dl>

@foreach (var faceInfo in Model.NormalizedFaces.Select((f, i) => new { Face = f, Side = i }))
{
    var face = faceInfo.Face;
    var side = faceInfo.Side;
    <fieldset class="card-face">
        <legend class="card-face-name">@face.Name</legend>
        <figure class="card-face-image"><img class="card" src="@Url.Action("Card", "Image", new { id = cardId, side = side })" /></figure>
        <section class="card-face-properties">
            <dl>
                @if (face.ManaCost != null)
                {
                    <dt>Mana Cost:</dt>
                    <dd>@face.ManaCost</dd>
                }

                @if (face.Types != null)
                {
                    <dt>Types:</dt>
                    <dd>@face.Types</dd>
                }

                @if (face.CardText != null || face.FlavorText != null)
                {
                    <dt>Card Text:</dt>
                    <dd>
                        @if (face.CardText != null)
                        {
                            foreach (var line in face.CardText)
                            {
                                <p class="card-face-text">@line</p>
                            }
                        }

                        @if (face.FlavorText != null)
                        {
                            foreach (var line in face.FlavorText)
                            {
                                <p class="card-face-flavor-text"><em>@line</em></p>
                            }
                        }
                    </dd>
                }

                @if (face.Power != null)
                {
                    <dt>Combat:</dt>
                    <dd>@face.Power/@face.Toughness</dd>
                }

                @if (face.Hand != null)
                {
                    <dt>Modifiers:</dt>
                    <dd>Hand @face.Hand, Life @face.Life</dd>
                }

                @if (face.Loyalty != null)
                {
                    <dt>Loyalty:</dt>
                    <dd>@face.Loyalty</dd>
                }

                @if (face.Artist != null)
                {
                    <dt>Artist:</dt>
                    <dd>@face.Artist</dd>
                }
            </dl>
        </section>
    </fieldset>
}

<div class="card-ownership">
Owned: @ownerships.Count

@using (Html.BeginForm("add", "card", new { id = Model.Id, autocomplete = "off" }))
{
    <input type="text" id="quantity" name="quantity" value="1" /> <button type="submit">Add</button>
}
</div>

<script>
    $(document).bind('keyup.a', function () {
        $("#quantity").focus().select(); return false;
    });
</script>